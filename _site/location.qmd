---
title: "Locatie"
description-meta: "Hoe jagen politieke partijen op jouw stem, wat willen ze juist niet dat je ziet en hoeveel geld geven ze daaraan uit? In aanloop naar de verkiezingen monitoren we politieke microtargeting."
lang: nl
format:
  html:
    toc: true
    toc-location: right
---


```{r setup, include=FALSE}

## Global options
knitr::opts_chunk$set(
  cache = F,
  echo = F,
  warning = F,
  message = F,
  cache.lazy = FALSE
)



# pacman::p_load(tidyverse, highcharter)
library(tidyverse)
library(highcharter)
library(gt)

pacman::p_load(knitr, tidyverse, rmarkdown, openxlsx, sf, shiny)

source("../utils.R")
source("../party_utils.R")

lts <<- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vR0B2SBiIU4UX0XNMGPHY1OLNpoZqxR6_dlF_kxJ0C7KpOKuXcIVgcf6oy8ljxLghXaAX6pPLXCgO-o/pub?output=csv") %>% 
  janitor::clean_names() %>% 
  rename(page_name = candidate) %>% 
  mutate(page_id = str_extract(ad_library_page, "view_all_page_id=.*") %>%
           str_remove_all("view_all_page_id\\=")) %>% 
  separate(page_id, into = c("page_id", "other"), sep = "&") %>% 
  select(-other)
```

De hier getoonde gegevens verwijzen naar de laatste 30 dagen (`r last30days_string`).


::: {.panel-tabset}

## Algemeen



::: {.panel-tabset}

### Inclusie

> De grootte van van elk kader in de grafiek is representatief voor de hoeveelheid geld die door de politieke partij aan de specifieke locatie wordt uitgegeven.

```{r,fig.width=10, fig.height=8}
library(treemap)
region_dat <- election_dat30 %>%
  filter(type == "location") %>%
  filter(location_type == "CITY") %>%
  filter(!is_exclusion)  %>%
  mutate(likely_together = paste0(total_spend_pct,num_ads) %>% as.factor() %>% as.numeric()) %>%
  group_by(internal_id) %>%
  add_count(likely_together, name = "n_clusters") %>%
  ungroup() %>%
  mutate(total_spend_formatted = total_spend_formatted*total_spend_pct) %>%
  mutate(total_spend_formatted = total_spend_formatted/n_clusters) %>%
  group_by(party, value) %>%
  summarise(total_spend_formatted = sum(total_spend_formatted),
            num_ads = sum(num_ads)) %>%
  ungroup() %>%
  rename(region = value) %>%
  mutate(region = str_remove_all(region, ", België"))

the_colors <- region_dat %>%
  group_by(party) %>%
  summarize(total_spend_formatted = sum(total_spend_formatted)) %>%
  ungroup() %>%
  mutate(party = fct_relevel(party)) %>%
  left_join(color_dat) %>%
  arrange(party) %>%
  drop_na(colors) %>%
  pull(colors)

if(nrow(region_dat)!=0) {
  ## Static version
  tm <- treemap(
    region_dat,
    index = c("party", "region"),
    vSize = "total_spend_formatted",
    vColor = "party",
    type = "index",
    title = "",
    align.labels = list(c("right", "bottom"),
                        c("center", "center")),
    fontsize.labels = c(21, 10),
    # size of labels. Give the size per level of aggregation: size for group, size for subgroup, sub-subgroups...

    fontcolor.labels = c("white", "white"),
    # Color of labels
    palette = the_colors
  )
} else {
  shiny::HTML("No data (yet).")
}



```


###  Uitsluiting

De onderstaande grafiek toont de locaties die door sommige politieke partijen worden uitgesloten op Meta. Ook toont het hoeveel geld de partijen uitgeven om deze locaties uit te sluiten in hun advertenties.


> De grootte van van elk kader in de grafiek is representatief voor de hoeveelheid geld die door de politieke partij aan de specifieke locatie wordt uitgegeven.

```{r,fig.width=10, fig.height=8}
library(treemap)
region_dat <- election_dat30 %>%
  filter(type == "location") %>%
  filter(location_type == "CITY") %>%
  filter(is_exclusion)  %>%
  mutate(likely_together = paste0(total_spend_pct,num_ads) %>% as.factor() %>% as.numeric()) %>%
  group_by(internal_id) %>%
  add_count(likely_together, name = "n_clusters") %>%
  ungroup() %>%
  mutate(total_spend_formatted = total_spend_formatted*total_spend_pct) %>%
  mutate(total_spend_formatted = total_spend_formatted/n_clusters) %>%
  group_by(party, value) %>%
  summarise(total_spend_formatted = sum(total_spend_formatted),
            num_ads = sum(num_ads)) %>%
  ungroup() %>%
  rename(region = value) %>%
  mutate(region = str_remove_all(region, ", België"))

the_colors <- region_dat %>%
  group_by(party) %>%
  summarize(total_spend_formatted = sum(total_spend_formatted)) %>%
  ungroup() %>%
  mutate(party = fct_relevel(party)) %>%
  left_join(color_dat) %>%
  arrange(party) %>%
  drop_na(colors) %>%
  pull(colors)

if(nrow(region_dat)!=0) {
  ## Static version
  tm <- treemap(
    region_dat,
    index = c("party", "region"),
    vSize = "total_spend_formatted",
    vColor = "party",
    type = "index",
    title = "",
    align.labels = list(c("right", "bottom"),
                        c("center", "center")),
    fontsize.labels = c(21, 10),
    # size of labels. Give the size per level of aggregation: size for group, size for subgroup, sub-subgroups...

    fontcolor.labels = c("white", "white"),
    # Color of labels
    palette = the_colors
  )
} else {
  shiny::HTML("No data (yet).")
}



```


:::


## EU



Dit gedeelte toont de lijsttrekkers voor de verkiezingen voor het Europees Parlement voor elke partij.

::: {.panel-tabset}

### Inclusie

> De grootte van van elk kader in de grafiek is representatief voor de hoeveelheid geld die door de politieke partij aan de specifieke locatie wordt uitgegeven.

```{r,fig.width=10, fig.height=8}
library(treemap)
region_dat <- election_dat30 %>% 
    left_join(lts %>% select(-party, -page_name) %>% 
              rename(internal_id = page_id,
                     elex_type = type), 
            by = "internal_id") %>% 
  filter(elex_type == "Lijsttrekkers_EU") %>% 
  filter(type == "location") %>%
  filter(location_type == "CITY") %>%
  filter(!is_exclusion)  %>%
  mutate(likely_together = paste0(total_spend_pct,num_ads) %>% as.factor() %>% as.numeric()) %>%
  group_by(internal_id) %>%
  add_count(likely_together, name = "n_clusters") %>%
  ungroup() %>%
  mutate(total_spend_formatted = total_spend_formatted*total_spend_pct) %>%
  mutate(total_spend_formatted = total_spend_formatted/n_clusters) %>%
  group_by(party, value) %>%
  summarise(total_spend_formatted = sum(total_spend_formatted),
            num_ads = sum(num_ads)) %>%
  ungroup() %>%
  rename(region = value) %>%
  mutate(region = str_remove_all(region, ", België"))

the_colors <- region_dat %>%
  group_by(party) %>%
  summarize(total_spend_formatted = sum(total_spend_formatted)) %>%
  ungroup() %>%
  mutate(party = fct_relevel(party)) %>%
  left_join(color_dat) %>%
  arrange(party) %>%
  drop_na(colors) %>%
  pull(colors)

if(nrow(region_dat)!=0) {
  ## Static version
  tm <- treemap(
    region_dat,
    index = c("party", "region"),
    vSize = "total_spend_formatted",
    vColor = "party",
    type = "index",
    title = "",
    align.labels = list(c("right", "bottom"),
                        c("center", "center")),
    fontsize.labels = c(21, 10),
    # size of labels. Give the size per level of aggregation: size for group, size for subgroup, sub-subgroups...

    fontcolor.labels = c("white", "white"),
    # Color of labels
    palette = the_colors
  )
} else {
  shiny::HTML("No data (yet).")
}



```


###  Uitsluiting

De onderstaande grafiek toont de locaties die door sommige politieke partijen worden uitgesloten op Meta. Ook toont het hoeveel geld de partijen uitgeven om deze locaties uit te sluiten in hun advertenties.


> De grootte van van elk kader in de grafiek is representatief voor de hoeveelheid geld die door de politieke partij aan de specifieke locatie wordt uitgegeven.

```{r,fig.width=10, fig.height=8}
library(treemap)
region_dat <- election_dat30 %>%
    left_join(lts %>% select(-party, -page_name) %>% 
              rename(internal_id = page_id,
                     elex_type = type), 
            by = "internal_id") %>% 
  filter(elex_type == "Lijsttrekkers_EU") %>% 
  filter(type == "location") %>%
  filter(location_type == "CITY") %>%
  filter(is_exclusion)  %>%
  mutate(likely_together = paste0(total_spend_pct,num_ads) %>% as.factor() %>% as.numeric()) %>%
  group_by(internal_id) %>%
  add_count(likely_together, name = "n_clusters") %>%
  ungroup() %>%
  mutate(total_spend_formatted = total_spend_formatted*total_spend_pct) %>%
  mutate(total_spend_formatted = total_spend_formatted/n_clusters) %>%
  group_by(party, value) %>%
  summarise(total_spend_formatted = sum(total_spend_formatted),
            num_ads = sum(num_ads)) %>%
  ungroup() %>%
  rename(region = value) %>%
  mutate(region = str_remove_all(region, ", België"))

the_colors <- region_dat %>%
  group_by(party) %>%
  summarize(total_spend_formatted = sum(total_spend_formatted)) %>%
  ungroup() %>%
  mutate(party = fct_relevel(party)) %>%
  left_join(color_dat) %>%
  arrange(party) %>%
  drop_na(colors) %>%
  pull(colors)

if(nrow(region_dat)!=0) {
  ## Static version
  tm <- treemap(
    region_dat,
    index = c("party", "region"),
    vSize = "total_spend_formatted",
    vColor = "party",
    type = "index",
    title = "",
    align.labels = list(c("right", "bottom"),
                        c("center", "center")),
    fontsize.labels = c(21, 10),
    # size of labels. Give the size per level of aggregation: size for group, size for subgroup, sub-subgroups...

    fontcolor.labels = c("white", "white"),
    # Color of labels
    palette = the_colors
  )
} else {
  shiny::HTML("No data (yet).")
}



```


:::



## Federaal



Dit gedeelte toont de lijsttrekkers voor de federale verkiezingen voor elke partij.


::: {.panel-tabset}

### Inclusie

> De grootte van van elk kader in de grafiek is representatief voor de hoeveelheid geld die door de politieke partij aan de specifieke locatie wordt uitgegeven.

```{r,fig.width=10, fig.height=8}
library(treemap)
region_dat <- election_dat30 %>%
    left_join(lts %>% select(-party, -page_name) %>% 
              rename(internal_id = page_id,
                     elex_type = type), 
            by = "internal_id") %>% 
  filter(elex_type == "Lijsttrekkers_federal_election") %>% 
  filter(type == "location") %>%
  filter(location_type == "CITY") %>%
  filter(!is_exclusion)  %>%
  mutate(likely_together = paste0(total_spend_pct,num_ads) %>% as.factor() %>% as.numeric()) %>%
  group_by(internal_id) %>%
  add_count(likely_together, name = "n_clusters") %>%
  ungroup() %>%
  mutate(total_spend_formatted = total_spend_formatted*total_spend_pct) %>%
  mutate(total_spend_formatted = total_spend_formatted/n_clusters) %>%
  group_by(party, value) %>%
  summarise(total_spend_formatted = sum(total_spend_formatted),
            num_ads = sum(num_ads)) %>%
  ungroup() %>%
  rename(region = value) %>%
  mutate(region = str_remove_all(region, ", België"))

the_colors <- region_dat %>%
  group_by(party) %>%
  summarize(total_spend_formatted = sum(total_spend_formatted)) %>%
  ungroup() %>%
  mutate(party = fct_relevel(party)) %>%
  left_join(color_dat) %>%
  arrange(party) %>%
  drop_na(colors) %>%
  pull(colors)

if(nrow(region_dat)!=0) {
  ## Static version
  tm <- treemap(
    region_dat,
    index = c("party", "region"),
    vSize = "total_spend_formatted",
    vColor = "party",
    type = "index",
    title = "",
    align.labels = list(c("right", "bottom"),
                        c("center", "center")),
    fontsize.labels = c(21, 10),
    # size of labels. Give the size per level of aggregation: size for group, size for subgroup, sub-subgroups...

    fontcolor.labels = c("white", "white"),
    # Color of labels
    palette = the_colors
  )
} else {
  shiny::HTML("No data (yet).")
}



```


###  Uitsluiting

De onderstaande grafiek toont de locaties die door sommige politieke partijen worden uitgesloten op Meta. Ook toont het hoeveel geld de partijen uitgeven om deze locaties uit te sluiten in hun advertenties.


> De grootte van van elk kader in de grafiek is representatief voor de hoeveelheid geld die door de politieke partij aan de specifieke locatie wordt uitgegeven.

```{r,fig.width=10, fig.height=8}
library(treemap)
region_dat <- election_dat30 %>%
    left_join(lts %>% select(-party, -page_name) %>% 
              rename(internal_id = page_id,
                     elex_type = type), 
            by = "internal_id") %>% 
  filter(elex_type == "Lijsttrekkers_federal_election") %>% 
  filter(type == "location") %>%
  filter(location_type == "CITY") %>%
  filter(is_exclusion)  %>%
  mutate(likely_together = paste0(total_spend_pct,num_ads) %>% as.factor() %>% as.numeric()) %>%
  group_by(internal_id) %>%
  add_count(likely_together, name = "n_clusters") %>%
  ungroup() %>%
  mutate(total_spend_formatted = total_spend_formatted*total_spend_pct) %>%
  mutate(total_spend_formatted = total_spend_formatted/n_clusters) %>%
  group_by(party, value) %>%
  summarise(total_spend_formatted = sum(total_spend_formatted),
            num_ads = sum(num_ads)) %>%
  ungroup() %>%
  rename(region = value) %>%
  mutate(region = str_remove_all(region, ", België"))

the_colors <- region_dat %>%
  group_by(party) %>%
  summarize(total_spend_formatted = sum(total_spend_formatted)) %>%
  ungroup() %>%
  mutate(party = fct_relevel(party)) %>%
  left_join(color_dat) %>%
  arrange(party) %>%
  drop_na(colors) %>%
  pull(colors)

if(nrow(region_dat)!=0) {
  ## Static version
  tm <- treemap(
    region_dat,
    index = c("party", "region"),
    vSize = "total_spend_formatted",
    vColor = "party",
    type = "index",
    title = "",
    align.labels = list(c("right", "bottom"),
                        c("center", "center")),
    fontsize.labels = c(21, 10),
    # size of labels. Give the size per level of aggregation: size for group, size for subgroup, sub-subgroups...

    fontcolor.labels = c("white", "white"),
    # Color of labels
    palette = the_colors
  )
} else {
  shiny::HTML("No data (yet).")
}



```


:::

## Vlaanderen



Dit gedeelte toont de lijsttrekkers voor de verkiezingen in Vlaanderen voor elke partij.



::: {.panel-tabset}

### Inclusie

> De grootte van van elk kader in de grafiek is representatief voor de hoeveelheid geld die door de politieke partij aan de specifieke locatie wordt uitgegeven.

```{r,fig.width=10, fig.height=8}
library(treemap)
region_dat <- election_dat30 %>%
    left_join(lts %>% select(-party, -page_name) %>% 
              rename(internal_id = page_id,
                     elex_type = type), 
            by = "internal_id") %>% 
  filter(elex_type == "Lijsttrekkers_Flemish_election") %>% 
  filter(type == "location") %>%
  filter(location_type == "CITY") %>%
  filter(!is_exclusion)  %>%
  mutate(likely_together = paste0(total_spend_pct,num_ads) %>% as.factor() %>% as.numeric()) %>%
  group_by(internal_id) %>%
  add_count(likely_together, name = "n_clusters") %>%
  ungroup() %>%
  mutate(total_spend_formatted = total_spend_formatted*total_spend_pct) %>%
  mutate(total_spend_formatted = total_spend_formatted/n_clusters) %>%
  group_by(party, value) %>%
  summarise(total_spend_formatted = sum(total_spend_formatted),
            num_ads = sum(num_ads)) %>%
  ungroup() %>%
  rename(region = value) %>%
  mutate(region = str_remove_all(region, ", België"))

the_colors <- region_dat %>%
  group_by(party) %>%
  summarize(total_spend_formatted = sum(total_spend_formatted)) %>%
  ungroup() %>%
  mutate(party = fct_relevel(party)) %>%
  left_join(color_dat) %>%
  arrange(party) %>%
  drop_na(colors) %>%
  pull(colors)

if(nrow(region_dat)!=0) {
  ## Static version
  tm <- treemap(
    region_dat,
    index = c("party", "region"),
    vSize = "total_spend_formatted",
    vColor = "party",
    type = "index",
    title = "",
    align.labels = list(c("right", "bottom"),
                        c("center", "center")),
    fontsize.labels = c(21, 10),
    # size of labels. Give the size per level of aggregation: size for group, size for subgroup, sub-subgroups...

    fontcolor.labels = c("white", "white"),
    # Color of labels
    palette = the_colors
  )
} else {
  shiny::HTML("No data (yet).")
}



```


###  Uitsluiting

De onderstaande grafiek toont de locaties die door sommige politieke partijen worden uitgesloten op Meta. Ook toont het hoeveel geld de partijen uitgeven om deze locaties uit te sluiten in hun advertenties.


> De grootte van van elk kader in de grafiek is representatief voor de hoeveelheid geld die door de politieke partij aan de specifieke locatie wordt uitgegeven.

```{r,fig.width=10, fig.height=8}
library(treemap)
region_dat <- election_dat30 %>%
    left_join(lts %>% select(-party, -page_name) %>% 
              rename(internal_id = page_id,
                     elex_type = type), 
            by = "internal_id") %>% 
  filter(elex_type == "Lijsttrekkers_Flemish_election") %>% 
  filter(type == "location") %>%
  filter(location_type == "CITY") %>%
  filter(is_exclusion)  %>%
  mutate(likely_together = paste0(total_spend_pct,num_ads) %>% as.factor() %>% as.numeric()) %>%
  group_by(internal_id) %>%
  add_count(likely_together, name = "n_clusters") %>%
  ungroup() %>%
  mutate(total_spend_formatted = total_spend_formatted*total_spend_pct) %>%
  mutate(total_spend_formatted = total_spend_formatted/n_clusters) %>%
  group_by(party, value) %>%
  summarise(total_spend_formatted = sum(total_spend_formatted),
            num_ads = sum(num_ads)) %>%
  ungroup() %>%
  rename(region = value) %>%
  mutate(region = str_remove_all(region, ", België"))

the_colors <- region_dat %>%
  group_by(party) %>%
  summarize(total_spend_formatted = sum(total_spend_formatted)) %>%
  ungroup() %>%
  mutate(party = fct_relevel(party)) %>%
  left_join(color_dat) %>%
  arrange(party) %>%
  drop_na(colors) %>%
  pull(colors)

if(nrow(region_dat)!=0) {
  ## Static version
  tm <- treemap(
    region_dat,
    index = c("party", "region"),
    vSize = "total_spend_formatted",
    vColor = "party",
    type = "index",
    title = "",
    align.labels = list(c("right", "bottom"),
                        c("center", "center")),
    fontsize.labels = c(21, 10),
    # size of labels. Give the size per level of aggregation: size for group, size for subgroup, sub-subgroups...

    fontcolor.labels = c("white", "white"),
    # Color of labels
    palette = the_colors
  )
} else {
  shiny::HTML("No data (yet).")
}



```


:::



## Brussel



Dit gedeelte toont de lijsttrekkers voor de verkiezingen in Brussel voor elke partij.


::: {.panel-tabset}

### Inclusie

> De grootte van van elk kader in de grafiek is representatief voor de hoeveelheid geld die door de politieke partij aan de specifieke locatie wordt uitgegeven.

```{r,fig.width=10, fig.height=8}
library(treemap)
region_dat <- election_dat30 %>%
    left_join(lts %>% select(-party, -page_name) %>% 
              rename(internal_id = page_id,
                     elex_type = type), 
            by = "internal_id") %>% 
  filter(elex_type == "Lijsttrekkers_Brussels_Gewest") %>% 
  filter(type == "location") %>%
  filter(location_type == "CITY") %>%
  filter(!is_exclusion)  %>%
  mutate(likely_together = paste0(total_spend_pct,num_ads) %>% as.factor() %>% as.numeric()) %>%
  group_by(internal_id) %>%
  add_count(likely_together, name = "n_clusters") %>%
  ungroup() %>%
  mutate(total_spend_formatted = total_spend_formatted*total_spend_pct) %>%
  mutate(total_spend_formatted = total_spend_formatted/n_clusters) %>%
  group_by(party, value) %>%
  summarise(total_spend_formatted = sum(total_spend_formatted),
            num_ads = sum(num_ads)) %>%
  ungroup() %>%
  rename(region = value) %>%
  mutate(region = str_remove_all(region, ", België"))

the_colors <- region_dat %>%
  group_by(party) %>%
  summarize(total_spend_formatted = sum(total_spend_formatted)) %>%
  ungroup() %>%
  mutate(party = fct_relevel(party)) %>%
  left_join(color_dat) %>%
  arrange(party) %>%
  drop_na(colors) %>%
  pull(colors)

if(nrow(region_dat)!=0) {
  ## Static version
  tm <- treemap(
    region_dat,
    index = c("party", "region"),
    vSize = "total_spend_formatted",
    vColor = "party",
    type = "index",
    title = "",
    align.labels = list(c("right", "bottom"),
                        c("center", "center")),
    fontsize.labels = c(21, 10),
    # size of labels. Give the size per level of aggregation: size for group, size for subgroup, sub-subgroups...

    fontcolor.labels = c("white", "white"),
    # Color of labels
    palette = the_colors
  )
} else {
  shiny::HTML("No data (yet).")
}



```


###  Uitsluiting

De onderstaande grafiek toont de locaties die door sommige politieke partijen worden uitgesloten op Meta. Ook toont het hoeveel geld de partijen uitgeven om deze locaties uit te sluiten in hun advertenties.


> De grootte van van elk kader in de grafiek is representatief voor de hoeveelheid geld die door de politieke partij aan de specifieke locatie wordt uitgegeven.

```{r,fig.width=10, fig.height=8}
library(treemap)
region_dat <- election_dat30 %>%
    left_join(lts %>% select(-party, -page_name) %>% 
              rename(internal_id = page_id,
                     elex_type = type), 
            by = "internal_id") %>% 
  filter(elex_type == "Lijsttrekkers_Brussels_Gewest") %>% 
  filter(type == "location") %>%
  filter(type == "location") %>%
  filter(location_type == "CITY") %>%
  filter(is_exclusion)  %>%
  mutate(likely_together = paste0(total_spend_pct,num_ads) %>% as.factor() %>% as.numeric()) %>%
  group_by(internal_id) %>%
  add_count(likely_together, name = "n_clusters") %>%
  ungroup() %>%
  mutate(total_spend_formatted = total_spend_formatted*total_spend_pct) %>%
  mutate(total_spend_formatted = total_spend_formatted/n_clusters) %>%
  group_by(party, value) %>%
  summarise(total_spend_formatted = sum(total_spend_formatted),
            num_ads = sum(num_ads)) %>%
  ungroup() %>%
  rename(region = value) %>%
  mutate(region = str_remove_all(region, ", België"))

the_colors <- region_dat %>%
  group_by(party) %>%
  summarize(total_spend_formatted = sum(total_spend_formatted)) %>%
  ungroup() %>%
  mutate(party = fct_relevel(party)) %>%
  left_join(color_dat) %>%
  arrange(party) %>%
  drop_na(colors) %>%
  pull(colors)

if(nrow(region_dat)!=0) {
  ## Static version
  tm <- treemap(
    region_dat,
    index = c("party", "region"),
    vSize = "total_spend_formatted",
    vColor = "party",
    type = "index",
    title = "",
    align.labels = list(c("right", "bottom"),
                        c("center", "center")),
    fontsize.labels = c(21, 10),
    # size of labels. Give the size per level of aggregation: size for group, size for subgroup, sub-subgroups...

    fontcolor.labels = c("white", "white"),
    # Color of labels
    palette = the_colors
  )
} else {
  shiny::HTML("No data (yet).")
}



```


:::

:::

